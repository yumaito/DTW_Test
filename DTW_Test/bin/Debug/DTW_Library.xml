<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DTW_Library</name>
    </assembly>
    <members>
        <member name="T:DTW_Library.PathPattern">
            <summary>
            経路の移動パターン
            </summary>
        </member>
        <member name="F:DTW_Library.PathPattern.Both">
            <summary>
            両方（斜め下）
            </summary>
        </member>
        <member name="F:DTW_Library.PathPattern.Original">
            <summary>
            比較元のみ（右）
            </summary>
        </member>
        <member name="F:DTW_Library.PathPattern.Subject">
            <summary>
            比較対象のみ（下）
            </summary>
        </member>
        <member name="T:DTW_Library.BasicDTW`1">
            <summary>
            単一の系列を扱うDTWの抽象クラス
            </summary>
        </member>
        <member name="T:DTW_Library.IDTW_base">
            <summary>
            DTWのベースとなるインターフェース
            </summary>
        </member>
        <member name="F:DTW_Library.BasicDTW`1.originalLength">
            <summary>
            比較元の配列の長さ
            </summary>
        </member>
        <member name="F:DTW_Library.BasicDTW`1.subjectLength">
            <summary>
            比較対象の配列の長さ
            </summary>
        </member>
        <member name="F:DTW_Library.BasicDTW`1.costField">
            <summary>
            コストの初期値
            </summary>
        </member>
        <member name="F:DTW_Library.BasicDTW`1.dp">
            <summary>
            距離関数
            </summary>
        </member>
        <member name="F:DTW_Library.BasicDTW`1.original">
            <summary>
            実際に比較する配列（比較元）
            </summary>
        </member>
        <member name="F:DTW_Library.BasicDTW`1.subject">
            <summary>
            実際に比較する配列（比較対象）
            </summary>
        </member>
        <member name="M:DTW_Library.BasicDTW`1.#ctor(`0[],`0[],DTW_Library.IDistance{`0})">
            <summary>
            Type型の単一系列のマッチング
            </summary>
            <param name="original">比較元配列</param>
            <param name="subject">比較対象配列</param>
            <param name="dp">距離関数の指定</param>
        </member>
        <member name="M:DTW_Library.BasicDTW`1.#ctor(`0[],`0[],DTW_Library.IDistance{`0},System.Int32)">
            <summary>
            Type型の単一系列のマッチング
            </summary>
            <param name="original">比較元配列</param>
            <param name="subject">比較対象配列</param>
            <param name="dp">距離関数の指定</param>
            <param name="shift">ずれコスト</param>
        </member>
        <member name="M:DTW_Library.BasicDTW`1.DTW">
            <summary>
            DTW本体
            </summary>
        </member>
        <member name="M:DTW_Library.BasicDTW`1.CalcPath">
            <summary>
            経路計算
            </summary>
        </member>
        <member name="M:DTW_Library.BasicDTW`1.PrimaryCostField">
            <summary>
            初期状態の距離計算
            </summary>
        </member>
        <member name="M:DTW_Library.BasicDTW`1.DTW_Run">
            <summary>
            DTW距離の計算に必要なメソッドを実行するメソッド
            コンストラクタで実行済み
            特に呼び出す必要はなし
            </summary>
        </member>
        <member name="M:DTW_Library.BasicDTW`1.IsPath(System.Int32,System.Int32)">
            <summary>
            指定した要素の組合せが経路になっているかどうか
            </summary>
            <param name="i">比較元（original）系列の要素番号</param>
            <param name="j">比較対象（subject）系列の要素番号</param>
            <returns>経路になっていればtrue、なっていなければfalse</returns>
        </member>
        <member name="M:DTW_Library.BasicDTW`1.originalPairNum(System.Int32)">
            <summary>
            originalの指定した要素と対応している要素番号をリスト形式で返すメソッド
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="M:DTW_Library.BasicDTW`1.subjectPairNum(System.Int32)">
            <summary>
            subjectの指定した要素と対応している要素番号をリスト形式で返すメソッド
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="P:DTW_Library.BasicDTW`1.Path">
            <summary>
            DPマッチング時の経路
            </summary>
        </member>
        <member name="P:DTW_Library.BasicDTW`1.Distance">
            <summary>
            DPマッチング（DTW）距離
            </summary>
        </member>
        <member name="P:DTW_Library.BasicDTW`1.Cost">
            <summary>
            最終的なコスト
            </summary>
        </member>
        <member name="P:DTW_Library.BasicDTW`1.From">
            <summary>
            どこからきたかを表す配列
            </summary>
        </member>
        <member name="T:DTW_Library.DTW_Path">
            <summary>
            DTW計算時の経路と比較要素が一致しているかを管理するクラス
            </summary>
        </member>
        <member name="M:DTW_Library.DTW_Path.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            DTW_Pathのコンストラクタ
            </summary>
            <param name="original">比較元のid番号</param>
            <param name="subject">比較対象のid番号</param>
            <param name="match">比較している要素同士が一致しているか否か</param>
        </member>
        <member name="P:DTW_Library.DTW_Path.Original">
            <summary>
            比較元のid番号
            </summary>
        </member>
        <member name="P:DTW_Library.DTW_Path.Subject">
            <summary>
            比較対象のid番号
            </summary>
        </member>
        <member name="P:DTW_Library.DTW_Path.Match">
            <summary>
            比較している要素同士が一致しているか否か
            </summary>
        </member>
        <member name="T:DTW_Library.DistanceFunction">
            <summary>
            距離関数の種類
            </summary>
        </member>
        <member name="F:DTW_Library.DistanceFunction.Numerical">
            <summary>
            数値の距離関数
            </summary>
        </member>
        <member name="F:DTW_Library.DistanceFunction.TextString">
            <summary>
            文字列の距離関数
            </summary>
        </member>
        <member name="F:DTW_Library.DistanceFunction.EuclidianDistance">
            <summary>
            ユークリッド距離
            </summary>
        </member>
        <member name="F:DTW_Library.DistanceFunction.ManhattanDistance">
            <summary>
            マンハッタン距離
            </summary>
        </member>
        <member name="F:DTW_Library.DistanceFunction.ZeroCost">
            <summary>
            コストなし
            </summary>
        </member>
        <member name="F:DTW_Library.DistanceFunction.Hamming">
            <summary>
            ハミング距離
            </summary>
        </member>
        <member name="F:DTW_Library.DistanceFunction.MatrixHamming">
            <summary>
            行列のハミング距離
            </summary>
        </member>
        <member name="F:DTW_Library.DistanceFunction.DTW_int">
            <summary>
            DTW距離（int型）
            </summary>
        </member>
        <member name="F:DTW_Library.DistanceFunction.DTW_string">
            <summary>
            DTW距離（string型）
            </summary>
        </member>
        <member name="T:DTW_Library.IDistance`1">
            <summary>
            距離関数インターフェース
            このインターフェースを継承することで独自の距離関数を定義可能
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:DTW_Library.IDistance`1.DP(`0,`0)">
            <summary>
            距離関数
            </summary>
            <param name="x">比較元</param>
            <param name="y">比較対象</param>
            <returns>xとyの距離</returns>
        </member>
        <member name="M:DTW_Library.IDistance`1.getDistanceFunction">
            <summary>
            距離関数の種類
            </summary>
            <returns></returns>
        </member>
        <member name="T:DTW_Library.NumericDistance">
            <summary>
            数値データの距離関数
            </summary>
        </member>
        <member name="M:DTW_Library.NumericDistance.DP(System.Int32,System.Int32)">
            <summary>
            距離関数（数直線）
            </summary>
            <param name="x">int型の数値</param>
            <param name="y">int型の数値</param>
            <returns>2つの値の差の絶対値</returns>
        </member>
        <member name="M:DTW_Library.NumericDistance.getDistanceFunction">
            <summary>
            距離関数の種類を返す
            </summary>
            <returns></returns>
        </member>
        <member name="T:DTW_Library.StringDistance">
            <summary>
            文字列データの距離関数
            </summary>
        </member>
        <member name="M:DTW_Library.StringDistance.DP(System.String,System.String)">
            <summary>
            距離関数（文字列）
            </summary>
            <param name="x">string型の値</param>
            <param name="y">string型の値</param>
            <returns></returns>
        </member>
        <member name="M:DTW_Library.StringDistance.getDistanceFunction">
            <summary>
            距離関数の種類
            </summary>
            <returns></returns>
        </member>
        <member name="T:DTW_Library.EuclidianDistance">
            <summary>
            距離関数（ユークリッド距離）
            </summary>
        </member>
        <member name="M:DTW_Library.EuclidianDistance.DP(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            距離関数（２次元のユークリッド距離）
            </summary>
            <param name="x">Point型の値</param>
            <param name="y">Point型の値</param>
            <returns>2点間の距離</returns>
        </member>
        <member name="M:DTW_Library.EuclidianDistance.getDistanceFunction">
            <summary>
            距離関数の種類
            </summary>
            <returns></returns>
        </member>
        <member name="T:DTW_Library.ManhattanDistance">
            <summary>
            距離関数（マンハッタン距離）
            </summary>
        </member>
        <member name="M:DTW_Library.ManhattanDistance.DP(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            距離関数（マンハッタン距離）
            </summary>
            <param name="x">Point型の値</param>
            <param name="y">Point型の値</param>
            <returns></returns>
        </member>
        <member name="M:DTW_Library.ManhattanDistance.getDistanceFunction">
            <summary>
            距離関数の種類
            </summary>
            <returns></returns>
        </member>
        <member name="T:DTW_Library.ShortDistance">
            <summary>
            short型の距離関数クラス
            </summary>
        </member>
        <member name="M:DTW_Library.ShortDistance.DP(System.Int16,System.Int16)">
            <summary>
            距離関数（short型、文字列と同じ扱い）
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:DTW_Library.ShortDistance.getDistanceFunction">
            <summary>
            距離関数の種類
            </summary>
            <returns></returns>
        </member>
        <member name="T:DTW_Library.ZeroCost">
            <summary>
            文字列の一致にかかわらずコストをかけない
            </summary>
        </member>
        <member name="M:DTW_Library.ZeroCost.DP(System.String,System.String)">
            <summary>
            距離関数（コストなし）
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:DTW_Library.ZeroCost.getDistanceFunction">
            <summary>
            距離関数の種類
            </summary>
            <returns></returns>
        </member>
        <member name="T:DTW_Library.HammingDistance">
            <summary>
            距離関数（ハミング距離）
            </summary>
        </member>
        <member name="M:DTW_Library.HammingDistance.DP(System.String[],System.String[])">
            <summary>
            距離関数（ハミング距離）
            </summary>
            <param name="x">string型の配列</param>
            <param name="y">string型の配列</param>
            <returns></returns>
        </member>
        <member name="M:DTW_Library.HammingDistance.getDistanceFunction">
            <summary>
            距離関数の種類
            </summary>
            <returns></returns>
        </member>
        <member name="T:DTW_Library.MatrixHammingDistance">
            <summary>
            行列のハミング距離（データは必ず多次元配列）
            </summary>
        </member>
        <member name="M:DTW_Library.MatrixHammingDistance.#ctor">
            <summary>
            ハミング距離（多次元配列、同じ次元数）
            </summary>
        </member>
        <member name="M:DTW_Library.MatrixHammingDistance.DP(System.String[0:,0:],System.String[0:,0:])">
            <summary>
            距離関数（行列のハミング距離）
            </summary>
            <param name="x">2次元配列</param>
            <param name="y">2次元配列</param>
            <returns></returns>
        </member>
        <member name="M:DTW_Library.MatrixHammingDistance.getDistanceFunction">
            <summary>
            距離関数の種類
            </summary>
            <returns></returns>
        </member>
        <member name="T:DTW_Library.DTWDistanceInt">
            <summary>
            DTW距離（int型）
            </summary>
        </member>
        <member name="M:DTW_Library.DTWDistanceInt.DP(System.Int32[],System.Int32[])">
            <summary>
            距離関数（int型のdtw距離）
            </summary>
            <param name="x">int型の配列</param>
            <param name="y">int型の配列</param>
            <returns></returns>
        </member>
        <member name="M:DTW_Library.DTWDistanceInt.getDistanceFunction">
            <summary>
            距離関数の種類
            </summary>
            <returns></returns>
        </member>
        <member name="T:DTW_Library.DTWDistanceString">
            <summary>
            DTW距離（string型）
            </summary>
        </member>
        <member name="M:DTW_Library.DTWDistanceString.DP(System.String[],System.String[])">
            <summary>
            距離関数（string型のdtw距離）
            </summary>
            <param name="x">string型の配列</param>
            <param name="y">string型の配列</param>
            <returns></returns>
        </member>
        <member name="M:DTW_Library.DTWDistanceString.getDistanceFunction">
            <summary>
            距離関数の種類
            </summary>
            <returns></returns>
        </member>
        <member name="T:DTW_Library.EuclidieanSpace">
            <summary>
            ユークリッド距離
            </summary>
        </member>
        <member name="M:DTW_Library.EuclidieanSpace.DP(System.Int16[],System.Int16[])">
            <summary>
            距離関数（ユークリッド距離）
            </summary>
            <param name="x">short型の配列</param>
            <param name="y">short型の配列</param>
            <returns>同じ要素同士の差の２乗の和の累乗根</returns>
        </member>
        <member name="M:DTW_Library.EuclidieanSpace.getDistanceFunction">
            <summary>
            距離関数の種類
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
